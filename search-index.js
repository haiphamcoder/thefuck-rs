var searchIndex = new Map(JSON.parse('[["thefuck_rs",{"t":"EEEEESEEEESCCCCCECCCFONNNNNONOONNNNNNNNNOONNNNNOHPPPPKPPPPPPPPPPPPPPGIPPPPNNNNNNNNNNNNNNNNNNNNNNNMNPPFFFPFPGPPNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONONONNNNNNOONOONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Cli","Command","CommandResult","CorrectedCommand","ErrorContext","NAME","ParsedCommand","Shell","TheFuckError","TheFuckResult","VERSION","cli","config","core","error","rules","run","shells","types","utils","Cli","alias","augment_args","augment_args_for_update","borrow","borrow_mut","command","","command_for_update","debug","enable_experimental_instant_mode","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","is_alias_request","is_command_fix_request","is_shell_logger_request","repeat","shell_logger","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","yes","run","CommandExecutionError","ConfigError","ConfigLoadError","Err","ErrorContext","FileReadError","FileSystemError","FileWriteError","HistoryError","IoError","NetworkError","NoRulesFound","Ok","ParseError","PathError","ProcessError","RuleExecutionError","SerdeError","ShellExecutionError","TheFuckError","TheFuckResult","TomlError","UnsupportedShell","Utf8Error","ValidationError","borrow","borrow_mut","config_error","file_system_error","fmt","","from","","","","","into","no_rules_found","parse_error","path_error","process_error","source","to_string","try_from","try_into","type_id","unsupported_shell","validation_error","with_context","","Bash","Cmd","Command","CommandResult","CorrectedCommand","Fish","ParsedCommand","PowerShell","Shell","Unknown","Zsh","age_minutes","age_seconds","argument","argument_count","arguments","","as_str","as_string","","borrow","","","","","borrow_mut","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","contains_argument","cwd","deserialize","","","","","env","eq","","","","","execution_time","exit_code","failure","fmt","","","","","","","","from","","","","","from_string","get_env","has_arguments","into","","","","","is_empty","is_recent","is_supported","new","","","","original","","parse","priority","program","","remove_env","requires_confirmation","serialize","","","","","set_env","shell","side_effects","starts_with","stderr","stdout","success","","text","","timestamp","to_owned","","","","","to_string","","","trimmed","try_from","","","","","try_into","","","","","type_id","","","","","validate","with_confirmation","with_cwd","with_env","with_side_effect","with_text","with_timestamp"],"q":[[0,"thefuck_rs"],[20,"thefuck_rs::cli"],[48,"thefuck_rs::core"],[49,"thefuck_rs::error"],[99,"thefuck_rs::types"],[243,"core::option"],[244,"clap_builder::builder::command"],[245,"alloc::vec"],[246,"core::fmt"],[247,"clap_builder::parser::matches::arg_matches"],[248,"clap_builder"],[249,"core::result"],[250,"clap_builder::util::id"],[251,"core::any"],[252,"alloc::string"],[253,"core::convert"],[254,"toml::de::error"],[255,"serde_json::error"],[256,"std::io::error"],[257,"core::error"],[258,"serde::de"],[259,"std::collections::hash::map"],[260,"serde::ser"],[261,"chrono::datetime"],[262,"chrono::offset::utc"]],"i":"`````````````````````d00000000000000000000000000`Bb00B``11111110111111``111111111111111111111111111Cb1D`0```0`0`00Cf0000Cn10210Db3Dd32140321403214032140333214033214000033221440321404333214033432102131323132140331300003133214032433214032140321403133133","f":"`````{{}b}````0``````````{df}{hh}0{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{{}h}{dl}1{dn}0{{{b{d}}{b{jA`}}}Ab}{cc{}}{{{b{Ad}}}{{Ah{dAf}}}}{{{b{jAd}}}{{Ah{dAf}}}}{{}{{f{Aj}}}}{{}c{}}{{{b{d}}}n}007={c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bAl}{{{b{jd}}{b{Ad}}}{{Ah{AnAf}}}}{{{b{jd}}{b{jAd}}}{{Ah{AnAf}}}}<{d{{B`{An}}}}`````````````````````````{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{cBb{{Bf{Bd}}}}0{{{b{Bb}}{b{jA`}}}Ab}0{BhBb}{BjBb}{BlBb}{BnBb}{cc{}}{{}c{}}7777{{{b{Bb}}}{{f{{b{C`}}}}}}{bBd}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bAl}<<{{Cbc}{{B`{e}}}Cd{}}{{{B`{c}}e}{{B`{c}}}{}Cd}```````````{{{b{Cf}}}Ch}0{{{b{Cf}}Cj}{{f{{b{Cl}}}}}}{{{b{Cf}}}Cj}{{{b{Cf}}}{{l{{b{Cl}}}}}}{Cnl}{{{b{Cf}}}{{b{Cl}}}}{{{b{Cn}}}Bd}{{{b{D`}}}Bd}{b{{b{c}}}{}}0000{{{b{j}}}{{b{jc}}}{}}0000{{{b{Cf}}}Cf}{{{b{Cn}}}Cn}{{{b{Db}}}Db}{{{b{D`}}}D`}{{{b{Dd}}}Dd}{{b{b{jc}}}An{}}0000{{bDf}An}0000{{{b{Cf}}{b{Cl}}}n}{CfBd}{c{{Ah{Cf}}}Dh}{c{{Ah{Cn}}}Dh}{c{{Ah{Db}}}Dh}{c{{Ah{D`}}}Dh}{c{{Ah{Dd}}}Dh}{CfDj}{{{b{Cf}}{b{Cf}}}n}{{{b{Cn}}{b{Cn}}}n}{{{b{Db}}{b{Db}}}n}{{{b{D`}}{b{D`}}}n}{{{b{Dd}}{b{Dd}}}n}{DdDl}{DdDn}{{DnBd}Dd}{{{b{Cf}}{b{jA`}}}Ab}0{{{b{Cn}}{b{jA`}}}Ab}0{{{b{Db}}{b{jA`}}}Ab}{{{b{D`}}{b{jA`}}}Ab}0{{{b{Dd}}{b{jA`}}}Ab}{cc{}}0000{{{b{Cl}}}D`}{{{b{Cf}}{b{Cl}}}{{f{{b{Bd}}}}}}{{{b{Cf}}}n}{{}c{}}000011{{{b{D`}}}n}{{BdD`}Cf}{{Bd{l{Bd}}Bd}Cn}{{BdCfE`}Db}{{nDnBdBdDl}Dd}{CnBd}{DbCf}{{{b{Cf}}}{{B`{Cn}}}}{DbE`}{{{b{Cf}}}{{f{{b{Cl}}}}}}4{{{b{jCf}}{b{Cl}}}{{f{Bd}}}}{Dbn}{{{b{Cf}}c}AhEb}{{{b{Cn}}c}AhEb}{{{b{Db}}c}AhEb}{{{b{D`}}c}AhEb}{{{b{Dd}}c}AhEb}{{{b{jCf}}BdBd}An}{CfD`}{Dbl}{{{b{Cf}}{b{Cl}}}n}{DdBd}0{BdDd}{Ddn}{CfBd}{DbBd}{CfEd}{bc{}}0000{bBd}00{{{b{Cf}}}{{b{Cl}}}}{c{{Ah{e}}}{}{}}0000{{}{{Ah{c}}}{}}0000{bAl}0000{{{b{Cf}}}{{B`{An}}}}{{Dbn}Db}{{CfBd}Cf}{{Cf{Dj{BdBd}}}Cf}{{DbBd}Db}{{{b{Cf}}Bd}Cf}{{Cf{Ed{Ef}}}Cf}","D":"Md","p":[[1,"reference",null,null,1],[5,"Cli",20],[6,"Option",243,null,1],[5,"Command",244],[0,"mut"],[5,"Vec",245],[1,"bool"],[5,"Formatter",246],[8,"Result",246],[5,"ArgMatches",247],[8,"Error",248],[6,"Result",249,null,1],[5,"Id",250],[5,"TypeId",251],[1,"unit"],[8,"TheFuckResult",49],[6,"TheFuckError",49],[5,"String",252],[10,"Into",253,null,1],[5,"FromUtf8Error",252],[5,"Error",254],[5,"Error",255],[5,"Error",256],[10,"Error",257],[10,"ErrorContext",49],[10,"Display",246],[5,"Command",99],[1,"i64"],[1,"usize"],[1,"str"],[5,"ParsedCommand",99],[6,"Shell",99],[5,"CorrectedCommand",99],[5,"CommandResult",99],[1,"u8"],[10,"Deserializer",258],[5,"HashMap",259],[1,"u64"],[1,"i32"],[1,"u32"],[10,"Serializer",260],[5,"DateTime",261],[5,"Utc",262]],"r":[[0,20],[1,99],[2,99],[3,99],[4,49],[6,99],[7,99],[8,49],[9,49],[16,48]],"b":[[78,"impl-Debug-for-TheFuckError"],[79,"impl-Display-for-TheFuckError"],[80,"impl-From%3CFromUtf8Error%3E-for-TheFuckError"],[81,"impl-From%3CError%3E-for-TheFuckError"],[82,"impl-From%3CError%3E-for-TheFuckError"],[83,"impl-From%3CError%3E-for-TheFuckError"],[160,"impl-Debug-for-Command"],[161,"impl-Display-for-Command"],[162,"impl-Debug-for-ParsedCommand"],[163,"impl-Display-for-ParsedCommand"],[165,"impl-Display-for-Shell"],[166,"impl-Debug-for-Shell"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIkAGwAAABUAFwAEAB0AAAAgAAAAIgACACYAAgArAAQAMQABADQAAAA3AAAAOQAAAEIAAABEAAAASwABAE8ABQBbAAQAYwACAGkAAABrAAAAbQABAHgAGACTAAQAmQAEAKEABwDFAAQA1QAHAN4ADgA=","P":[[24,"T"],[26,""],[32,"T"],[33,""],[36,"U"],[37,""],[42,"U,T"],[43,"U"],[44,""],[74,"T"],[76,"S"],[78,""],[84,"T"],[85,"U"],[86,"S"],[90,""],[92,"U,T"],[93,"U"],[94,""],[95,"S"],[97,"C,T"],[98,"T,C"],[110,""],[119,"T"],[129,""],[134,"T"],[139,""],[146,"__D"],[151,""],[168,"T"],[173,""],[176,"U"],[181,""],[196,"__S"],[201,""],[212,"T"],[217,""],[221,"U,T"],[226,"U"],[231,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7084]}